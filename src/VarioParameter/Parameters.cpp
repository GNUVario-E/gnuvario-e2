#include "Parameters.h"
#include <freertos/task.h>

static portMUX_TYPE my_lock = portMUX_INITIALIZER_UNLOCKED;

/* Null, because instance will be initialized on demand. */
Parameters *Parameters::instance = 0;

Parameters *Parameters::getInstance()
{
    taskENTER_CRITICAL(&my_lock);
    if (instance == NULL)
    {
        instance = new Parameters();
    }
    taskEXIT_CRITICAL(&my_lock);
    return instance;
}

Parameters::Parameters()
{
}

void Parameters::initDefault()
{
    /* systeme */
    P_BT_ENABLE = new ConfigParameter<bool>(PARAM_BT_ENABLE, DEFAULT_BT_ENABLE);
    P_NO_RECORD = new ConfigParameter<bool>(PARAM_NO_RECORD, DEFAULT_NO_RECORD);
    P_BEEP_GPSFIX = new ConfigParameter<bool>(PARAM_BEEP_GPSFIX, DEFAULT_BEEP_GPSFIX);
    P_BEEP_FLYBEGIN = new ConfigParameter<bool>(PARAM_BEEP_FLYBEGIN, DEFAULT_BEEP_FLYBEGIN);
    P_BEEP_VARIOBEGIN = new ConfigParameter<bool>(PARAM_BEEP_VARIOBEGIN, DEFAULT_BEEP_VARIOBEGIN);
    P_MUTE_VARIOBEGIN = new ConfigParameter<bool>(PARAM_MUTE_VARIOBEGIN, DEFAULT_MUTE_VARIOBEGIN);
    P_SLEEP_TIMEOUT_MINUTES = new ConfigParameter<uint8_t>(PARAM_SLEEP_TIMEOUT_MINUTES, DEFAULT_SLEEP_TIMEOUT_MINUTES);
    P_SLEEP_THRESHOLD_CPS = new ConfigParameter<float>(PARAM_SLEEP_THRESHOLD_CPS, DEFAULT_SLEEP_THRESHOLD_CPS);
    P_MULTIDISPLAY_DURATION = new ConfigParameter<uint16_t>(PARAM_MULTIDISPLAY_DURATION, DEFAULT_MULTIDISPLAY_DURATION);
    P_DISPLAY_STAT_DURATION = new ConfigParameter<uint8_t>(PARAM_DISPLAY_STAT_DURATION, DEFAULT_DISPLAY_STAT_DURATION);
    P_URL_UPDATE = new ConfigParameter<const char *>(PARAM_URL_UPDATE, DEFAULT_URL_UPDATE);
    P_LANGUAGE = new ConfigParameter<uint8_t>(PARAM_LANGUAGE, DEFAULT_LANGUAGE);

    /* Général */
    P_PILOT_NAME = new ConfigParameter<const char *>(PARAM_PILOT_NAME, DEFAULT_PILOT_NAME);
    P_GLIDER_SELECT = new ConfigParameter<uint8_t>(PARAM_GLIDER_SELECT, DEFAULT_GLIDER_SELECT);
    P_GLIDER_NAME1 = new ConfigParameter<const char *>(PARAM_GLIDER_NAME1, DEFAULT_GLIDER_NAME1);
    P_GLIDER_NAME2 = new ConfigParameter<const char *>(PARAM_GLIDER_NAME2, DEFAULT_GLIDER_NAME2);
    P_GLIDER_NAME3 = new ConfigParameter<const char *>(PARAM_GLIDER_NAME3, DEFAULT_GLIDER_NAME3);
    P_GLIDER_NAME4 = new ConfigParameter<const char *>(PARAM_GLIDER_NAME4, DEFAULT_GLIDER_NAME4);
    P_TIME_ZONE = new ConfigParameter<int8_t>(PARAM_TIME_ZONE, DEFAULT_TIME_ZONE);

    /* Vario */
    P_ACCELERATION_MEASURE_STANDARD_DEVIATION = new ConfigParameter<float>(PARAM_ACCELERATION_MEASURE_STANDARD_DEVIATION, DEFAULT_ACCELERATION_MEASURE_STANDARD_DEVIATION);

    /* wifi */
    P_SSID_1 = new ConfigParameter<const char *>(PARAM_SSID_1, DEFAULT_SSID_1);
    P_PASSWORD_1 = new ConfigParameter<const char *>(PARAM_PASSWORD_1, DEFAULT_PASSWORD_1);
    P_SSID_2 = new ConfigParameter<const char *>(PARAM_SSID_2, DEFAULT_SSID_2);
    P_PASSWORD_2 = new ConfigParameter<const char *>(PARAM_PASSWORD_2, DEFAULT_PASSWORD_2);
    P_SSID_3 = new ConfigParameter<const char *>(PARAM_SSID_3, DEFAULT_SSID_3);
    P_PASSWORD_3 = new ConfigParameter<const char *>(PARAM_PASSWORD_3, DEFAULT_PASSWORD_3);
    P_SSID_4 = new ConfigParameter<const char *>(PARAM_SSID_4, DEFAULT_SSID_4);
    P_PASSWORD_4 = new ConfigParameter<const char *>(PARAM_PASSWORD_4, DEFAULT_PASSWORD_4);

    /* variocal */
    P_VERTACCEL_GYRO_CAL_BIAS_00 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_00, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_00);
    P_VERTACCEL_GYRO_CAL_BIAS_01 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_01, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_01);
    P_VERTACCEL_GYRO_CAL_BIAS_02 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_02, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_02);
    P_VERTACCEL_GYRO_CAL_BIAS_03 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_03, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_03);
    P_VERTACCEL_GYRO_CAL_BIAS_04 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_04, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_04);
    P_VERTACCEL_GYRO_CAL_BIAS_05 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_05, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_05);
    P_VERTACCEL_GYRO_CAL_BIAS_06 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_06, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_06);
    P_VERTACCEL_GYRO_CAL_BIAS_07 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_07, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_07);
    P_VERTACCEL_GYRO_CAL_BIAS_08 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_08, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_08);
    P_VERTACCEL_GYRO_CAL_BIAS_09 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_09, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_09);
    P_VERTACCEL_GYRO_CAL_BIAS_10 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_10, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_10);
    P_VERTACCEL_GYRO_CAL_BIAS_11 = new ConfigParameter<uint8_t>(PARAM_VERTACCEL_GYRO_CAL_BIAS_11, DEFAULT_VERTACCEL_GYRO_CAL_BIAS_11);
    P_VERTACCEL_ACCEL_CAL_BIAS_00 = new ConfigParameter<int16_t>(PARAM_VERTACCEL_ACCEL_CAL_BIAS_00, DEFAULT_VERTACCEL_ACCEL_CAL_BIAS_00);
    P_VERTACCEL_ACCEL_CAL_BIAS_01 = new ConfigParameter<int16_t>(PARAM_VERTACCEL_ACCEL_CAL_BIAS_01, DEFAULT_VERTACCEL_ACCEL_CAL_BIAS_01);
    P_VERTACCEL_ACCEL_CAL_BIAS_02 = new ConfigParameter<int16_t>(PARAM_VERTACCEL_ACCEL_CAL_BIAS_02, DEFAULT_VERTACCEL_ACCEL_CAL_BIAS_02);
    P_VERTACCEL_ACCEL_CAL_SCALE = new ConfigParameter<int16_t>(PARAM_VERTACCEL_ACCEL_CAL_SCALE, DEFAULT_VERTACCEL_ACCEL_CAL_SCALE);
    P_VERTACCEL_MAG_CAL_BIAS_00 = new ConfigParameter<int16_t>(PARAM_VERTACCEL_MAG_CAL_BIAS_00, DEFAULT_VERTACCEL_MAG_CAL_BIAS_00);
    P_VERTACCEL_MAG_CAL_BIAS_01 = new ConfigParameter<int16_t>(PARAM_VERTACCEL_MAG_CAL_BIAS_01, DEFAULT_VERTACCEL_MAG_CAL_BIAS_01);
    P_VERTACCEL_MAG_CAL_BIAS_02 = new ConfigParameter<int16_t>(PARAM_VERTACCEL_MAG_CAL_BIAS_02, DEFAULT_VERTACCEL_MAG_CAL_BIAS_02);
    P_VERTACCEL_MAG_CAL_PROJ_SCALE = new ConfigParameter<int16_t>(PARAM_VERTACCEL_MAG_CAL_PROJ_SCALE, DEFAULT_VERTACCEL_MAG_CAL_PROJ_SCALE);
    P_VERTACCEL_ACCEL_CAL_BIAS_MULTIPLIER = new ConfigParameter<uint16_t>(PARAM_VERTACCEL_ACCEL_CAL_BIAS_MULTIPLIER, DEFAULT_VERTACCEL_ACCEL_CAL_BIAS_MULTIPLIER);
    P_VERTACCEL_MAG_CAL_BIAS_MULTIPLIER = new ConfigParameter<uint16_t>(PARAM_VERTACCEL_MAG_CAL_BIAS_MULTIPLIER, DEFAULT_VERTACCEL_MAG_CAL_BIAS_MULTIPLIER);
}